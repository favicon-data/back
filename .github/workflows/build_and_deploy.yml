name: PR Build Test and Deploy to DockerHub

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, develop ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@4

      - name: Set up Docker Compose
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
          echo "AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}" >> $GITHUB_ENV
          echo "RDS_HOSTNAME=${{ secrets.RDS_HOSTNAME }}" >> $GITHUB_ENV
          echo "RDS_PASSWORD=${{ secrets.RDS_PASSWORD }}" >> $GITHUB_ENV
          echo "RDS_PORT=${{ secrets.RDS_PORT }}" >> $GITHUB_ENV
          echo "RDS_USERNAME=${{ secrets.RDS_USERNAME }}" >> $GITHUB_ENV        

  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582
        with:
          cache-read-only: false

      - name: Grant Execute Permission For Gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: | 
          set -e
          ./gradlew clean build -Dspring.profiles.active=local

  upload-to-docker-hub:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build \
          --build-arg SPRING_PROFILES_ACTIVE=local \
          -f Dockerfile \
          -t ${{ secrets.DOCKERHUB_USERNAME}}/erica-favicon .

      - name: DockerHub login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME}}
          password: ${{ secrets.DOCKERHUB_PASSWORD}}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME}}/erica-favicon

  deploy-to-EC2:
    needs: upload-to-docker-hub
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: favicon
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            export SPRING_PROFILES_ACTIVE=prod
            sudo docker-compose stop
            sudo docker-compose rm -f
            sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/erica-favicon:latest
            sudo docker-compose pull
            sudo docker-compose up -d